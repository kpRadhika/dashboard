(function(b){b.jCryption=function(a,f){var e=this;e.$el=b(a);e.el=a;e.$el.data("jCryption",e);e.init=function(){e.options=b.extend({},b.jCryption.defaultOptions,f);$encryptedElement=b("<input />",{type:"hidden",name:e.options.postVariable});(e.options.submitElement!==false?e.options.submitElement:e.$el.find(":input:submit")).bind(e.options.submitEvent,function(){b(this).attr("disabled",true);e.options.beforeEncryption()&&b.jCryption.getKeys(e.options.getKeysURL,function(c){b.jCryption.encrypt(e.$el.serialize(),c,function(d){$encryptedElement.val(d);b(e.$el).find(":input").attr("disabled",true).end().append($encryptedElement).submit()})});return false})};e.init()};b.jCryption.getKeys=function(a,f){var e=this;e.getKeys=function(){b.getJSON(a,function(c){keys=new e.jCryptionKeyPair(c.e,c.n,c.maxdigits);b.isFunction(f)&&f.call(this,keys)})};e.jCryptionKeyPair=function(h,d,c){setMaxDigits(parseInt(c,10));this.e=biFromHex(h);this.m=biFromHex(d);this.chunkSize=2*biHighIndex(this.m);this.radix=16;this.barrett=new BarrettMu(this.m)};e.getKeys()};b.jCryption.encrypt=function(a,l,k){for(var h=0,g=0;g<a.length;g++){h+=a.charCodeAt(g)}g="";g+="0123456789abcdef".charAt((h&240)>>4)+"0123456789abcdef".charAt(h&15);a=g+a;h=[];for(g=0;g<a.length;){h[g]=a.charCodeAt(g);g++}for(;h.length%l.chunkSize!==0;){h[g++]=0}(function(f){function e(){p=new BigInt;c=0;for(var m=d;m<d+l.chunkSize;++c){p.digits[c]=f[m++];p.digits[c]+=f[m++]<<8}m=l.barrett.powMod(p,l.e);m=l.radix==16?biToHex(m):biToString(m,l.radix);q+=m+" ";d+=l.chunkSize;if(d<f.length){setTimeout(e,1)}else{m=q.substring(0,q.length-1);if(b.isFunction(k)){k(m)}else{return m}}}var d=0,c,p,q="";setTimeout(e,1)})(h)};b.jCryption.defaultOptions={submitElement:false,submitEvent:"click",getKeysURL:"main.php?generateKeypair=true",beforeEncryption:function(){return true},postVariable:"jCryption"};b.fn.jCryption=function(a){return this.each(function(){new b.jCryption(this,a)})}})(jQuery);var biRadixBase=2,biRadixBits=16,bitsPerDigit=biRadixBits,biRadix=65536,biHalfRadix=biRadix>>>1,biRadixSquared=biRadix*biRadix,maxDigitVal=biRadix-1,maxInteger=9999999999999998,maxDigits,ZERO_ARRAY,bigZero,bigOne,dpl10=15,highBitMasks=Array(0,32768,49152,57344,61440,63488,64512,65024,65280,65408,65472,65504,65520,65528,65532,65534,65535),hexatrigesimalToChar=Array("0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"),hexToChar=Array("0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"),lowBitMasks=Array(0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535);function setMaxDigits(b){maxDigits=b;ZERO_ARRAY=Array(maxDigits);for(b=0;b<ZERO_ARRAY.length;b++){ZERO_ARRAY[b]=0}bigZero=new BigInt;bigOne=new BigInt;bigOne.digits[0]=1}function BigInt(b){this.digits=typeof b=="boolean"&&b==true?null:ZERO_ARRAY.slice(0);this.isNeg=false}function biFromDecimal(g){for(var f=g.charAt(0)=="-",l=f?1:0,k;l<g.length&&g.charAt(l)=="0";){++l}if(l==g.length){k=new BigInt}else{var h=(g.length-l)%dpl10;if(h==0){h=dpl10}k=biFromNumber(Number(g.substr(l,h)));for(l+=h;l<g.length;){k=biAdd(biMultiply(k,biFromNumber(1000000000000000)),biFromNumber(Number(g.substr(l,dpl10))));l+=dpl10}k.isNeg=f}return k}function biCopy(d){var c=new BigInt(true);c.digits=d.digits.slice(0);c.isNeg=d.isNeg;return c}function biFromNumber(e){var d=new BigInt;d.isNeg=e<0;e=Math.abs(e);for(var f=0;e>0;){d.digits[f++]=e&maxDigitVal;e>>=biRadixBits}return d}function reverseStr(e){for(var d="",f=e.length-1;f>-1;--f){d+=e.charAt(f)}return d}function biToString(g,f){var l=new BigInt;l.digits[0]=f;for(var k=biDivideModulo(g,l),h=hexatrigesimalToChar[k[1].digits[0]];biCompare(k[0],bigZero)==1;){k=biDivideModulo(k[0],l);digit=k[1].digits[0];h+=hexatrigesimalToChar[k[1].digits[0]]}return(g.isNeg?"-":"")+reverseStr(h)}function biToDecimal(f){var e=new BigInt;e.digits[0]=10;for(var h=biDivideModulo(f,e),g=String(h[1].digits[0]);biCompare(h[0],bigZero)==1;){h=biDivideModulo(h[0],e);g+=String(h[1].digits[0])}return(f.isNeg?"-":"")+reverseStr(g)}function digitToHex(d){var c="";for(i=0;i<4;++i){c+=hexToChar[d&15];d>>>=4}return reverseStr(c)}function biToHex(e){var d="";biHighIndex(e);for(var f=biHighIndex(e);f>-1;--f){d+=digitToHex(e.digits[f])}return d}function charToHex(b){return b>=48&&b<=57?b-48:b>=65&&b<=90?10+b-65:b>=97&&b<=122?10+b-97:0}function hexToDigit(f){for(var e=0,h=Math.min(f.length,4),g=0;g<h;++g){e<<=4;e|=charToHex(f.charCodeAt(g))}return e}function biFromHex(f){for(var e=new BigInt,h=f.length,g=0;h>0;h-=4,++g){e.digits[g]=hexToDigit(f.substr(Math.max(h-4,0),Math.min(h,4)))}return e}function biFromString(l,k){var r=l.charAt(0)=="-",q=r?1:0,p=new BigInt,o=new BigInt;o.digits[0]=1;for(var n=l.length-1;n>=q;n--){var m=l.charCodeAt(n);m=charToHex(m);m=biMultiplyDigit(o,m);p=biAdd(p,m);o=biMultiplyDigit(o,k)}p.isNeg=r;return p}function biDump(b){return(b.isNeg?"-":"")+b.digits.join(" ")}function biAdd(g,f){var l;if(g.isNeg!=f.isNeg){f.isNeg=!f.isNeg;l=biSubtract(g,f);f.isNeg=!f.isNeg}else{l=new BigInt;for(var k=0,h=0;h<g.digits.length;++h){k=g.digits[h]+f.digits[h]+k;l.digits[h]=k&65535;k=Number(k>=biRadix)}l.isNeg=g.isNeg}return l}function biSubtract(g,f){var l;if(g.isNeg!=f.isNeg){f.isNeg=!f.isNeg;l=biAdd(g,f);f.isNeg=!f.isNeg}else{l=new BigInt;var k;for(var h=k=0;h<g.digits.length;++h){k=g.digits[h]-f.digits[h]+k;l.digits[h]=k&65535;if(l.digits[h]<0){l.digits[h]+=biRadix}k=0-Number(k<0)}if(k==-1){for(h=k=0;h<g.digits.length;++h){k=0-l.digits[h]+k;l.digits[h]=k&65535;if(l.digits[h]<0){l.digits[h]+=biRadix}k=0-Number(k<0)}l.isNeg=!g.isNeg}else{l.isNeg=g.isNeg}}return l}function biHighIndex(d){for(var c=d.digits.length-1;c>0&&d.digits[c]==0;){--c}return c}function biNumBits(e){var d=biHighIndex(e);e=e.digits[d];d=(d+1)*bitsPerDigit;var f;for(f=d;f>d-bitsPerDigit;--f){if((e&32768)!=0){break}e<<=1}return f}function biMultiply(l,k){for(var r=new BigInt,q,p=biHighIndex(l),o=biHighIndex(k),n,m=0;m<=o;++m){q=0;n=m;for(j=0;j<=p;++j,++n){q=r.digits[n]+l.digits[j]*k.digits[m]+q;r.digits[n]=q&maxDigitVal;q=q>>>biRadixBits}r.digits[m+p+1]=q}r.isNeg=l.isNeg!=k.isNeg;return r}function biMultiplyDigit(g,f){var l,k;result=new BigInt;l=biHighIndex(g);for(var h=k=0;h<=l;++h){k=result.digits[h]+g.digits[h]*f+k;result.digits[h]=k&maxDigitVal;k=k>>>biRadixBits}result.digits[1+l]=k;return result}function arrayCopy(g,f,l,k,h){h=Math.min(f+h,g.length);f=f;for(k=k;f<h;++f,++k){l[k]=g[f]}}function biShiftLeft(k,h){var p=Math.floor(h/bitsPerDigit),o=new BigInt;arrayCopy(k.digits,0,o.digits,p,o.digits.length-p);p=h%bitsPerDigit;for(var n=bitsPerDigit-p,m=o.digits.length-1,l=m-1;m>0;--m,--l){o.digits[m]=o.digits[m]<<p&maxDigitVal|(o.digits[l]&highBitMasks[p])>>>n}o.digits[0]=o.digits[m]<<p&maxDigitVal;o.isNeg=k.isNeg;return o}function biShiftRight(k,h){var p=Math.floor(h/bitsPerDigit),o=new BigInt;arrayCopy(k.digits,p,o.digits,0,k.digits.length-p);p=h%bitsPerDigit;for(var n=bitsPerDigit-p,m=0,l=m+1;m<o.digits.length-1;++m,++l){o.digits[m]=o.digits[m]>>>p|(o.digits[l]&lowBitMasks[p])<<n}o.digits[o.digits.length-1]>>>=p;o.isNeg=k.isNeg;return o}function biMultiplyByRadixPower(e,d){var f=new BigInt;arrayCopy(e.digits,0,f.digits,d,f.digits.length-d);return f}function biDivideByRadixPower(e,d){var f=new BigInt;arrayCopy(e.digits,d,f.digits,0,f.digits.length-d);return f}function biModuloByRadixPower(e,d){var f=new BigInt;arrayCopy(e.digits,0,f.digits,0,d);return f}function biCompare(e,d){if(e.isNeg!=d.isNeg){return 1-2*Number(e.isNeg)}for(var f=e.digits.length-1;f>=0;--f){if(e.digits[f]!=d.digits[f]){return e.isNeg?1-2*Number(e.digits[f]>d.digits[f]):1-2*Number(e.digits[f]<d.digits[f])}}return 0}function biDivideModulo(F,E){var D=biNumBits(F),C=biNumBits(E),B=E.isNeg,A,z;if(D<C){if(F.isNeg){A=biCopy(bigOne);A.isNeg=!E.isNeg;F.isNeg=false;E.isNeg=false;z=biSubtract(E,F);F.isNeg=true;E.isNeg=B}else{A=new BigInt;z=biCopy(F)}return Array(A,z)}A=new BigInt;z=F;for(var y=Math.ceil(C/bitsPerDigit)-1,w=0;E.digits[y]<biHalfRadix;){E=biShiftLeft(E,1);++w;++C;y=Math.ceil(C/bitsPerDigit)-1}z=biShiftLeft(z,w);D+=w;D=Math.ceil(D/bitsPerDigit)-1;for(C=biMultiplyByRadixPower(E,D-y);biCompare(z,C)!=-1;){++A.digits[D-y];z=biSubtract(z,C)}for(D=D;D>y;--D){C=D>=z.digits.length?0:z.digits[D];var v=D-1>=z.digits.length?0:z.digits[D-1],t=D-2>=z.digits.length?0:z.digits[D-2],u=y>=E.digits.length?0:E.digits[y],x=y-1>=E.digits.length?0:E.digits[y-1];A.digits[D-y-1]=C==u?maxDigitVal:Math.floor((C*biRadix+v)/u);for(var s=A.digits[D-y-1]*(u*biRadix+x),r=C*biRadixSquared+(v*biRadix+t);s>r;){--A.digits[D-y-1];s=A.digits[D-y-1]*(u*biRadix|x);r=C*biRadix*biRadix+(v*biRadix+t)}C=biMultiplyByRadixPower(E,D-y-1);z=biSubtract(z,biMultiplyDigit(C,A.digits[D-y-1]));if(z.isNeg){z=biAdd(z,C);--A.digits[D-y-1]}}z=biShiftRight(z,w);A.isNeg=F.isNeg!=B;if(F.isNeg){A=B?biAdd(A,bigOne):biSubtract(A,bigOne);E=biShiftRight(E,w);z=biSubtract(E,z)}if(z.digits[0]==0&&biHighIndex(z)==0){z.isNeg=false}return Array(A,z)}function biDivide(d,c){return biDivideModulo(d,c)[0]}function biModulo(d,c){return biDivideModulo(d,c)[1]}function biMultiplyMod(e,d,f){return biModulo(biMultiply(e,d),f)}function biPow(f,e){for(var h=bigOne,g=f;;){if((e&1)!=0){h=biMultiply(h,g)}e>>=1;if(e==0){break}g=biMultiply(g,g)}return h}function biPowMod(f,e,h){var g=bigOne;f=f;for(e=e;;){if((e.digits[0]&1)!=0){g=biMultiplyMod(g,f,h)}e=biShiftRight(e,1);if(e.digits[0]==0&&biHighIndex(e)==0){break}f=biMultiplyMod(f,f,h)}return g}function BarrettMu(b){this.modulus=biCopy(b);this.k=biHighIndex(this.modulus)+1;b=new BigInt;b.digits[2*this.k]=1;this.mu=biDivide(b,this.modulus);this.bkplus1=new BigInt;this.bkplus1.digits[this.k+1]=1;this.modulo=BarrettMu_modulo;this.multiplyMod=BarrettMu_multiplyMod;this.powMod=BarrettMu_powMod}function BarrettMu_modulo(d){var c=biDivideByRadixPower(d,this.k-1);c=biMultiply(c,this.mu);c=biDivideByRadixPower(c,this.k+1);d=biModuloByRadixPower(d,this.k+1);c=biMultiply(c,this.modulus);c=biModuloByRadixPower(c,this.k+1);d=biSubtract(d,c);if(d.isNeg){d=biAdd(d,this.bkplus1)}for(c=biCompare(d,this.modulus)>=0;c;){d=biSubtract(d,this.modulus);c=biCompare(d,this.modulus)>=0}return d}function BarrettMu_multiplyMod(d,c){return this.modulo(biMultiply(d,c))}function BarrettMu_powMod(e,d){var f=new BigInt;for(f.digits[0]=1;;){if((d.digits[0]&1)!=0){f=this.multiplyMod(f,e)}d=biShiftRight(d,1);if(d.digits[0]==0&&biHighIndex(d)==0){break}e=this.multiplyMod(e,e)}return f};